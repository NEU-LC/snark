set( PROJECT "ipx" )
set( TARGET_NAME snark_${PROJECT} )

if( WIN32 )
    message( FATAL_ERROR "not implemented" )
endif( WIN32 )

set( ARCH "x86_64" CACHE STRING "architecture of the project" )
if("${ARCH}" STREQUAL "x86")
    if ("${CMAKE_SYSTEM_NAME}" STREQUAL "Windows")
        set(ARCH_DIR "Win32_i86")
        add_definitions(-D_WIN32)
    elseif ("${CMAKE_SYSTEM_NAME}" STREQUAL "Linux")
        set(ARCH_DIR "Linux32_i86")
        add_definitions(-DLINUX)
    else()
        set(ARCH_DIR "x86")
    endif()
else()
    if ("${CMAKE_SYSTEM_NAME}" STREQUAL "Windows")
        set(ARCH_DIR "Win64_x64")
        add_definitions(-D_WIN32)
    elseif ("${CMAKE_SYSTEM_NAME}" STREQUAL "Linux")
        set(ARCH_DIR "Linux64_x64")
        add_definitions(-DLINUX)
    else()
        set(ARCH_DIR "x64")
    endif()
endif()

set( IPX_SDK_DIR "" CACHE PATH "ipx sdk directory" )
if( NOT EXISTS "${IPX_SDK_DIR}/inc/IpxCameraApi.h" )
    message( FATAL_ERROR "expected IPX SDK directory containing e.g. inc/IpxCameraApi.h; got: '${IPX_SDK_DIR}'" )
endif( NOT EXISTS "${IPX_SDK_DIR}/inc/IpxCameraApi.h" )
add_custom_target( ipx.conf ) # quick and dirty
add_custom_command( TARGET ipx.conf
                    POST_BUILD
                    COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/ipx-generate-ld-conf ARGS "${IPX_SDK_DIR}/lib/${ARCH_DIR}" )
install( FILES ${CMAKE_BINARY_DIR}/sensors/cameras/ipx/ipx.conf DESTINATION /etc/ld.so.conf.d )
install( CODE "message( \"sensors/cameras/ipx: running ldconfig\" )" )
install( CODE "execute_process( COMMAND ldconfig )" )
include_directories( BEFORE SYSTEM ${IPX_SDK_DIR}/inc )
link_directories( "${IPX_SDK_DIR}/lib/${ARCH_DIR}" )
file( GLOB source *.cpp )
file( GLOB includes *.h )
source_group( ${TARGET_NAME} FILES ${source} ${includes} )
add_library( ${TARGET_NAME} ${source} ${includes} )
set_target_properties( ${TARGET_NAME} PROPERTIES ${snark_LIBRARY_PROPERTIES} )
target_link_libraries( ${TARGET_NAME} ${comma_ALL_LIBRARIES} ${comma_ALL_EXTERNAL_LIBRARIES} ${snark_ALL_LIBRARIES} ${snark_ALL_EXTERNAL_LIBRARIES} IpxCameraApi )
add_dependencies( ${TARGET_NAME} ipx.conf )
#set( CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DUSE_GIGE -Wl,-E" )
#add_subdirectory( applications )

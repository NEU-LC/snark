_snark_bash_completion()
{
    local cur prev opts
    COMPREPLY=()
    cur="${COMP_WORDS[COMP_CWORD]}"
    prev="${COMP_WORDS[COMP_CWORD-1]}"
    # These tests are necessary because bash will attempt completion on
    # ./name if there is a name in its completion list
    # even if ./name does not exist 
    if [[ -x "${COMP_WORDS[0]}" ]] ; then
        opts=$( "${COMP_WORDS[0]}" --bash-completion )
    elif type -p "${COMP_WORDS[0]}" > /dev/null 2> /dev/null ; then
        opts=$( "${COMP_WORDS[0]}" --bash-completion )
    fi
    COMPREPLY=( $( compgen -f -d -W "${opts}" -- ${cur}) )
}

complete -F _snark_bash_completion advanced-navigation-spatial-to-csv
complete -F _snark_bash_completion basler-cat
complete -F _snark_bash_completion basler-log
complete -F _snark_bash_completion basler-log-summary
complete -F _snark_bash_completion control-calc
complete -F _snark_bash_completion control-speed
complete -F _snark_bash_completion echodyne-cat
complete -F _snark_bash_completion echodyne-cmd
complete -F _snark_bash_completion geo-sun-position
complete -F _snark_bash_completion innovusion-cat
complete -F _snark_bash_completion mat-convert
complete -F _snark_bash_completion ocular-roboteye-thermal-cat
complete -F _snark_bash_completion points-align
complete -F _snark_bash_completion quickset-pantilt-web-control
complete -F _snark_bash_completion snark-graphics-test-pattern
complete -F _snark_bash_completion vantage-command
complete -F _snark_bash_completion vantage-to-csv
complete -F _snark_bash_completion view-points
complete -F _snark_bash_completion vimba-cat
